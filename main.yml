---
- name: "Main Ansible playbook"
  hosts: localhost
  connection: local
  
  vars:
    dotfiles_dst: "{{ lookup('env', 'HOME') }}/.dotfiles"
    dotfiles_repo: "git@github.com:P-Miranda/dotfiles.git"
    dotgit_cmd: "/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
    program_src_path: "{{ lookup('env', 'HOME') }}/program_sources"
    opt_path: "{{ lookup('env', 'HOME') }}/opt"
    keepassxc_org: "keepassxreboot"
    keepassxc_repo: "keepassxc"

  pre_tasks:
  - name: "Update Cache"
    become: yes
    apt:
      update_cache: yes
      cache_valid_time: 3600

  tasks:
  - name: "Update all packages"
    become: yes
    apt:
      name: "*"
      state: latest

  - name: "Install Desktop Components"
    become: yes
    apt:
      pkg:
      - xfce4
      - xfce4-goodies
      - i3
      - lightdm
      state: latest

  - name: "Install Packages"
    become: yes
    apt:
      pkg:
      - htop
      - git
      - tmux
      - vim
      - lxappearance
      - build-essential
      - arandr
      - bear
      - libreoffice
      - texlive
      - thunderbird
      state: latest

  - name: "Set dotgit Command Alias"
    lineinfile:
      path: "{{ lookup('env', 'HOME') }}/.bashrc"
      regexp: '^alias dotgit='
      line: alias dotgit='{{ dotgit_cmd }}'
      state: present

  # NOTE: assumes existing ssh key added to github account
  - name: "Clone Dotfiles"
    git:
      bare: yes
      dest: "{{ dotfiles_dst }}"
      repo: "{{ dotfiles_repo }}"
      update: yes
      recursive: yes

  - name: "Ignore .dotfiles folder"
    lineinfile:
      path: "{{ lookup('env', 'HOME') }}/.gitignore"
      regexp: '^.dotfiles'
      line: .dotfiles
      state: present
      create: yes

  - name: "Configure dotgit repository"
    command: "{{ dotgit_cmd }} config --local status.showUntrackedFiles no"
    args:
      creates: "{{ lookup('env', 'HOME') }}/.config-backup"

  - name: "Backup conflicting files"
    shell: >
      cd {{ lookup('env', 'HOME') }} &&
      mkdir -p .config-backup &&
      {{ dotgit_cmd }} checkout 2>&1 | egrep "\s+\." | awk {'print $1'} |
      xargs -I{} mv {} .config-backup/{} &&
      {{ dotgit_cmd }} checkout
    args:
      creates: "{{ lookup('env', 'HOME') }}/.config-backup"

  - name: "Setup Vim"
    command: vim +PluginInstall +qall
    args:
      creates: "{{ lookup('env', 'HOME') }}/.vim/bundle/vim-fugitive"

  - name: "Install Neovim Dependencies"
    become: yes
    apt:
      pkg:
      - ninja-build
      - gettext
      - libtool
      - libtool-bin
      - autoconf
      - automake
      - cmake
      - g++
      - pkg-config
      - unzip
      - curl
      - doxygen
      state: latest

  - name: "Create Program Source Folder"
    file:
      path: "{{ program_src_path }}"
      state: directory
      mode: '0700'

  - name: "Create Opt Folder"
    file:
      path: "{{ opt_path }}"
      state: directory
      mode: '0700'

  # - name: "Clone Neovim Repository"
  #   git:
  #     dest: "{{ program_src_path }}/neovim"
  #     repo: "git@github.com:neovim/neovim.git"
  #     update: yes
  #     recursive: yes
  #     version: nightly
  #
  # - name: "Compile Neovim from Source"
  #   make:
  #     chdir: "{{ program_src_path }}/neovim"
  #     params:
  #       CMAKE_BUILD_TYPE: Release
  #       CMAKE_INSTALL_PREFIX: "{{ opt_path }}/neovim"
  #
  # - name: "Install Neovim"
  #   make:
  #     chdir: "{{ program_src_path }}/neovim"
  #     target: install
  #
  # - name: "Add to Path"
  #   lineinfile:
  #     path: "{{ lookup('env', 'HOME') }}/.bash_local"
  #     regexp: '^PATH=$HOME/opt/neovim/bin'
  #     line: 'PATH=$HOME/opt/neovim/bin:$PATH'
  #     state: present
  #     create: yes
  #
  # - name: "Install Plugin Dependencies"
  #   apt:
  #   become: yes
  #   apt:
  #     pkg:
  #     - xsel
  #     - ripgrep
  #     state: latest

  - name: "Get KeePassXC AppImage Download Link"
    shell: "./scripts/latest_appimage_url.sh {{ keepassxc_org }} {{keepassxc_repo }}"
    register: latest_appimage_url

  - set_fact:
      keepassxc_link={{ latest_appimage_url.stdout }}

  - name: "Debug keepassxc link"
    debug:
      msg: "{{ keepassxc_link }}"

  - name: "Download KeePassXC AppImage"
    get_url:
      url: "{{ keepassxc_link }}"
      dest: "{{ opt_path }}/keepassxc"
      mode: '0500'

  - name: "Add to .local/bin"
    file:
      src: "{{ opt_path }}/keepassxc"
      dest: "{{ lookup('env', 'HOME') }}/.local/bin/keepassxc"
      state: link

  - name: "Add Google Chrome Repository Key"
    become: yes
    apt_key:
      url: "https://dl.google.com/linux/linux_signing_key.pub"
      state: present

  - name: "Add Google Chrome Repository"
    become: yes
    apt_repository:
      repo: "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main"
      state: present
      filename: google-chrome
      update_cache: yes

  - name: "Install Google Chrome"
    become: yes
    apt:
      pkg: google-chrome-stable
      state: present

  - name: "Add Brave Browser Repository Key"
    become: yes
    apt_key:
      url: "https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg"
      state: present

  - name: "Add Brave Browser Repository"
    become: yes
    apt_repository:
      repo: "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"
      state: present
      filename: brave-browser
      update_cache: yes

  - name: "Install Brave Browser"
    become: yes
    apt:
      pkg: brave-browser
      state: present
