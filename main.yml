---
- name: "Main Ansible playbook"
  hosts: localhost
  connection: local
  
  vars:
    dotfiles_dst: "{{ lookup('env', 'HOME') }}/.dotfiles"
    dotfiles_repo: "git@github.com:P-Miranda/dotfiles.git"
    dotgit_cmd: "/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
    dotgit_cmd2: "/usr/bin/git --git-dir={{ lookup('env', 'HOME') }}/.dotfiles/ --work-tree={{ lookup('env', 'HOME') }}"

  pre_tasks:
  - name: "Update Cache"
    become: yes
    apt:
      update_cache: yes
      cache_valid_time: 3600

  tasks:
  - name: "Update all packages"
    become: yes
    apt:
      name: "*"
      state: latest

  - name: "Install Desktop Components"
    become: yes
    apt:
      pkg:
      - xfce4
      - xfce4-goodies
      - i3
      - lightdm
      state: latest

  - name: "Install Packages"
    become: yes
    apt:
      pkg:
      - git
      - tmux
      - vim
      - lxappearance
      - build-essential
      - arandr
      - bear
      - libreoffice
      - texlive
      - thunderbird
      state: latest

  - name: "Set dotgit Command Alias"
    lineinfile:
      path: "{{ lookup('env', 'HOME') }}/.bashrc"
      regexp: '^alias dotgit='
      line: alias dotgit='{{ dotgit_cmd }}'
      state: present

  # NOTE: assumes existing ssh key added to github account
  - name: "Clone Dotfiles"
    git:
      bare: yes
      dest: "{{ dotfiles_dst }}"
      repo: "{{ dotfiles_repo }}"
      update: yes
      recursive: yes

  - name: "Ignore .dotfiles folder"
    lineinfile:
      path: "{{ lookup('env', 'HOME') }}/.gitignore"
      regexp: '^.dotfiles'
      line: .dotfiles
      state: present
      create: yes

  - name: "Configure dotgit repository"
    command: "{{ dotgit_cmd }} config --local status.showUntrackedFiles no"
    args:
      creates: "{{ lookup('env', 'HOME') }}/.config-backup"

  - name: "Backup conflicting files"
    shell: >
      cd {{ lookup('env', 'HOME') }} &&
      mkdir -p .config-backup &&
      {{ dotgit_cmd }} checkout 2>&1 | egrep "\s+\." | awk {'print $1'} |
      xargs -I{} mv {} .config-backup/{} &&
      {{ dotgit_cmd }} checkout
    args:
      creates: "{{ lookup('env', 'HOME') }}/.config-backup"

  - name: "Setup Vim"
    command: vim +PluginInstall +qall
    args:
      creates: "{{ lookup('env', 'HOME') }}/.vim/bundle/vim-fugitive"
